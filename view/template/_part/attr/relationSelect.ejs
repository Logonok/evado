<!-- _part/attr/relationSelect -->

<% let params = {}; %>
<%- include('_params', {params}) %>
<%
let d = {
    relName: attr,
    order: {[model.PK]: -1},
    key: model.PK,
    remove: false,
    unlink: true,
    ...data
};
d.attr = attr;
d.relName = d.relName || attr;

let rel = model.getRelation(d.relName);
let urlParams = {
    rel: d.relName,
    pid: model.getId()
};
d.multiple = rel.isMultiple();
if (d.list !== null) {
    if (d.list === undefined) {
        d.list = ['list-rel-select', urlParams];
    } else if (typeof d.list === 'string') {
        d.list = [d.list, urlParams];
    }
    d.list = _url(d.list);
}
let relUrl = typeof relRoute === 'undefined' ? rel.model.getControllerClass().NAME : relRoute;
/* if (d.view !== null) {
    d.view = _url(d.view === undefined ? `${relUrl}/view` : d.view);
}//*/
if (d.viewTitle !== null) {
    d.viewTitle = _url(d.viewTitle === undefined ? `${relUrl}/view-title` : d.viewTitle);
}
if (d.create !== null) {
    if (d.create === undefined) {
        d.create = [`${relUrl}/create`, urlParams];
    } else if (!Array.isArray(d.create) && typeof d.create === 'object') {
        d.create = [`${relUrl}/create`, Object.assign(urlParams, d.create)];
    }
    d.create = _url(d.create);
}
if (d.clone === true) {
    d.clone = _url(`${relUrl}/clone`);
} else if (Array.isArray(d.clone)) {
    d.clone = _url(d.clone);
}
if (d.update !== null) {
    if (d.update === undefined) {
        d.update = [`${relUrl}/update`, urlParams];
    } else if (!Array.isArray(d.update) && typeof d.update === 'object') {
        d.update = [`${relUrl}/update`, Object.assign(urlParams, d.update)];
    }
    d.update = _url(d.update);
}
if (d.link !== null) {
    if (d.link === undefined) {
        d.link = [`${relUrl}/select`, urlParams];
    } else if (typeof d.link === 'string') {
        d.link = [d.link, urlParams];
    }
    d.link = _url(d.link);
}
if (d.modalSort) {
    if (d.modalSort === true) {
        d.modalSort = _url(['sort-rel', urlParams]);
    } else if (Array.isArray(d.modalSort)) {
        d.modalSort = _url(d.modalSort);
    }
}
let related = model.rel(attr);
%>
<div class="form-attr form-group<%- params.required %> <%- params.css %>" data-type="relationSelect">
    <label for="<%- params.id %>" class="control-label l10n <%- params.labelCss %>"><%- params.label %></label>
    <div class="<%- params.valueCss %>">
        <div class="box relation-select-box">
            <input name="<%- params.name %>" type="hidden" class="form-value" value="">
            <div class="box-body">
                <div class="list-controls">
                    <% if (d.unlink) { %>
                    <button data-id="unlink" class="btn btn-default mr10" type="button" title="Unlink">
                        <span class="fa fa-unlink text-danger"></span>
                    </button>
                    <% } %>
                    <% if (d.create) { %>
                    <button data-id="create" class="btn btn-success btn-light" type="button" title="Create">
                        <span class="glyphicon glyphicon-plus"></span>
                    </button>
                    <% } %>
                    <% if (d.update) { %>
                    <button data-id="update" class="btn btn-warning btn-light" type="button" title="Update">
                        <span class="glyphicon glyphicon-pencil"></span>
                    </button>
                    <% } %>
                    <% if (d.remove) { %>
                    <button data-id="remove" class="btn btn-white" type="button" title="Delete">
                        <span class="glyphicon glyphicon-trash text-danger"></span>
                    </button>
                    <% } %>
                    <% if (d.modalSort) { %>
                    <button data-id="sort" class="btn btn-white" type="button" title="Sort">
                        <span class="glyphicon glyphicon-sort"></span>
                    </button>
                    <% } %>
                    <% if (typeof tools !== 'undefined') { %>
                    <%- include(_view.get('_part/misc/universal-render'), {data: tools}) %>
                    <% } %>
                </div>
                <select id="<%- params.id %>" class="form-control" <% if (d.multiple) { %>multiple<% } %>
                        data-params="<%= JSON.stringify(d) %>">
                    <% if (Array.isArray(related)) { %>
                    <% for (let item of related) { %>
                    <option value="<%- item.getId() %>" selected><%= item.getTitle() %></option>
                    <% }} else if (related) { %>
                    <option value="<%- related.getId() %>" selected><%= related.getTitle() %></option>
                    <% } %>
                </select>
            </div>
        </div>
        <div class="error-block"></div>
    </div>
</div>